---

- name: site prepare
  tags: ["{{apache2_todo.go | default('never') }}"]
  vars:
    my_site: "{{ gz_apache2_config.site | combine(opts_site,recursive=True) }}"
  block:
  - name: site_paths
    tags: ["{{apache2_todo.create_paths | default('never') }}"]
    vars:
      opts_site_v2_dirs:
        dir_items: "{{my_site.site_paths}}"
    include_tasks: site_v2_dirs.yml
  ####site_mounts
  - name: site_mounts
    tags: ["{{apache2_todo.create_mounts | default('never') }}"]
    loop: "{{ q('dict',my_site.site_mounts) }}"
    vars:
      opt_rw: "bind,rw,auto,gid={{item.value.owner}},uid={{item.value.owner}}"
      opt_ro: "bind,ro,auto,gid={{item.value.owner}},uid={{item.value.owner}}"
    mount:
      path:     "{{item.value.path}}"
      src:      "{{item.value.src}}"
      fstype:   "{{item.value.fstype | default('none') }}"
      state:    "{{item.value.state | default('mounted') }}"
      opts:     "{{item.value.opts | default(opt_ro) }}"
      boot:     "{{item.value.boot | default('no') }}"
    #debug: var=item
  ####path_perms
  - name: path_permissions
    tags: ["{{apache2_todo.path_perms | default('never') }}"]
    block:
    - name: / permission
      ansible.builtin.file: path="{{my_site.site_paths.site_root.src}}" mode="u=rwx,g=rx,o=rx"
    - name: htdocs permission
      ansible.builtin.file: path="{{my_site.site_paths.htdocs.src}}" mode='a+X' recurse=yes
  ####
  - name: create_index
    tags: ["{{apache2_todo.create_index | default('never') }}"]
    block:
    - stat: path="{{my_site.site_paths.htdocs.src}}{{my_site.index_name}}"
      register: file_check
    - name: Create index file
      when: file_check.stat.exists==false
      ansible.builtin.template:
        src: "{{my_site.index_tpl}}"
        dest: "{{my_site.site_paths.htdocs.src}}{{ my_site.index_name}}"
  ####
  - name: create_phpinfo
    tags: ["{{apache2_todo.create_phpinfo | default('never') }}"]
    ansible.builtin.copy:
      src: "{{my_site.phpinfo_file}}"
      dest: "{{my_site.site_paths.htdocs.src}}/{{my_site.phpinfo_name}}"
  ####
  - name: Create .htaccess file
    tags: ["{{apache2_todo.create_htaccess | default('never') }}"]
    vars:
      htaccess_file: "{{my_site.site_paths.htdocs.src}}.htaccess"
    block:
    - name: redirect https
      ansible.builtin.blockinfile:
        create: true
        marker: "#{mark} Redirect https"
        path: "{{htaccess_file}}"
        block: |
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    - name: redirect host
      when: (my_site.htaccess.redirect_host) is defined and my_site.htaccess.redirect_host
      ansible.builtin.blockinfile:
        create: true
        marker: "#{mark} Redirect host"
        path: "{{htaccess_file}}"
        block: |
          RewriteEngine On
          RewriteCond %{HTTP_HOST} !^{{my_site.htaccess.redirect_host}}$ [NC]
          RewriteRule ^(.*)$ {{my_site.htaccess.redirect_host}}/$1 [R=301,L]
    - name: redirect all
      when: (my_site.htaccess.redirect_all) is defined and my_site.htaccess.redirect_all
      ansible.builtin.blockinfile:
        create: true
        path: "{{htaccess_file}}"
        marker: "#{mark} Redirect all"
        block: |
          RewriteEngine On
          RewriteBase /
          RewriteCond %{HTTPS} off [OR]
          RewriteCond %{HTTP_HOST} !^{{my_site.htaccess.redirect_all}}$
          RewriteRule ^(.*)$ https://{{my_site.htaccess.redirect_all}}/$1 [R=301,L]
  #####
  - name: Create http (vhost:80)
    tags: ["{{apache2_todo.create_http | default('never') }}"]
    block:
    - name: a2dissite {{my_site.site_conf_name}}    #Must use site_conf_name
      tags: ["{{apache2_todo.a2ensite | default('never') }}"]
      ignore_errors: yes
      command: a2dissite {{my_site.site_conf_name}}
    - name: Create vhost:80
      ansible.builtin.template:
        src: "{{my_site.vhost_tpl}}"
        dest: "{{my_site.sites_available_dir}}{{my_site.site_conf_name}}.conf"
    - name: a2ensite {{my_site.site_conf_name}}     #Must use site_conf_name
      tags: ["{{apache2_todo.a2ensite | default('never') }}"]
      command: a2ensite {{my_site.site_conf_name}}
      notify: [restart apache2]
  #####
  - name: Create https (vhost:443)
    tags: ["{{apache2_todo.create_https | default('never') }}"]
    vars:
      certs_file: "{{my_site.site_paths.certs.src}}{{my_site.site_conf_name}}.crt"
      private_key_file: "{{my_site.site_paths.certs.src}}{{my_site.site_conf_name}}.key"
      https:
        port: 443
        SSLCertificateFile: "{{certs_file}}"
        SSLCertificateKeyFile: "{{private_key_file}}"
        #SSLCertificateChainFile:
    block:
    - name: a2dissite {{my_site.site_conf_name_ssl}}    #Must use site_conf_name
      tags: ["{{apache2_todo.a2ensite | default('never') }}"]
      ignore_errors: yes
      command: a2dissite {{my_site.site_conf_name_ssl}}
    - name: Create vhost:443
      ansible.builtin.template:
        src: "{{my_site.vhost_tpl}}"
        dest: "{{my_site.sites_available_dir}}{{my_site.site_conf_name_ssl}}.conf"
    - ansible.builtin.service: name=apache2 state=restarted
    - {name: SSL (Self signed) ,include_tasks: ssl_self_signed.yml }
    - name: a2ensite {{my_site.site_conf_name_ssl}}     #Must use site_conf_name
      tags: ["{{apache2_todo.a2ensite | default('never') }}"]
      command: a2ensite {{my_site.site_conf_name_ssl}}
      notify: [restart apache2]  #Notify in add_websites.yml instead.
